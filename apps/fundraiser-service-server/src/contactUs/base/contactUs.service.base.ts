/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ContactUs as PrismaContactUs } from "@prisma/client";

export class ContactUsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ContactUsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.contactUs.count(args);
  }

  async contactuses(
    args: Prisma.ContactUsFindManyArgs
  ): Promise<PrismaContactUs[]> {
    return this.prisma.contactUs.findMany(args);
  }
  async contactUs(
    args: Prisma.ContactUsFindUniqueArgs
  ): Promise<PrismaContactUs | null> {
    return this.prisma.contactUs.findUnique(args);
  }
  async createContactUs(
    args: Prisma.ContactUsCreateArgs
  ): Promise<PrismaContactUs> {
    return this.prisma.contactUs.create(args);
  }
  async updateContactUs(
    args: Prisma.ContactUsUpdateArgs
  ): Promise<PrismaContactUs> {
    return this.prisma.contactUs.update(args);
  }
  async deleteContactUs(
    args: Prisma.ContactUsDeleteArgs
  ): Promise<PrismaContactUs> {
    return this.prisma.contactUs.delete(args);
  }
}
